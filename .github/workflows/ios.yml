name: iOS

on:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Qt
        uses: johanremilien/install-qt-action@v2
        with:
          target: ios

      # - name: Apply Qt patch
      #   run: |
      #     cd ${{ env.Qt5_DIR }}
      #     # wget patch (see https://codereview.qt-project.org/c/qt/qtbase/+/353118)
      #     wget https://codereview.qt-project.org/changes/qt%2Fqtbase\~353118/revisions/2/patch\?zip\&path\=mkspecs%2Fmacx-xcode%2FWorkspaceSettings.xcsettings -O patch.zip
      #     # unzip patch
      #     unzip patch.zip; rm patch.zip
      #     # apply patch
      #     git apply a5273d4.diff; rm a5273d4.diff
      #     cd -

      - name: qmake
        run: qmake

      - name: make (generate qrc_ and moc_ files)
        run: make -j$(sysctl -n hw.physicalcpu) -is

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default

      - name: Select iOS simulator
        run: |
         brew install coreutils
         device=`xcrun simctl list -j devices iP | grep "name" | gshuf -n 1 | cut -d : -f2 | awk -F\" '{print $2}'`
         echo $device | cat >device
         echo iOS simulator selected: $device

      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          device: ${{ 'device' }}
        run: |
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ $device = device ]; then device=$(cat device); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      #- name: Test
      #  env:
      #    scheme: ${{ 'default' }}
      #    platform: ${{ 'iOS Simulator' }}
      #    device: ${{ 'device' }}
      #  run: |
      #    if [ $scheme = default ]; then scheme=$(cat default); fi
      #    if [ $device = device ]; then device=$(cat device); fi
      #    if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
      #    file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
      #    xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"

      - name: tree
        run: tree .
