    # This file contains the fastlane.tools configuration
    # You can find the documentation at https://docs.fastlane.tools
    #
    # For a list of all available actions, check out
    #
    #     https://docs.fastlane.tools/actions
    #
    # For a list of all available plugins, check out
    #
    #     https://docs.fastlane.tools/plugins/available-plugins
    #
    # From
    #
    #     https://www.runway.team/blog/how-to-set-up-a-ci-cd-pipeline-for-your-ios-app-fastlane-github-actions
    #

    # Uncomment the line if you want fastlane to automatically update itself
    update_fastlane

    default_platform(:ios)

    platform :ios do
     desc "Load ASC API Key information to use in subsequent lanes"
     lane :load_asc_api_key do
       app_store_connect_api_key(
         key_id: ENV["ASC_KEY_ID"],
         issuer_id: ENV["ASC_ISSUER_ID"],
         key_content: ENV["ASC_KEY"],
         is_key_content_base64: true,
         in_house: false # detecting this via ASC private key not currently supported
       )
     end

    desc "Bump build number based on most recent TestFlight build number"
    lane :fetch_and_increment_build_number do
     #fetch read your app identifier defined in your Appfile
     app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
     api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

     current_version = get_version_number(
       target: "WordClock"
     )
     latest_build_number = latest_testflight_build_number(
       api_key: api_key,
       version: current_version,
       app_identifier: app_identifier
     )
     increment_build_number(
       build_number: (latest_build_number + 1),
     )
    end


    desc "Check certs and profiles"
    lane :prepare_signing do |options|
     app_id = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
     api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

     profile_name = "App Provisioning Profile"

     cert(
         api_key: api_key,
         keychain_path: ENV["KEYCHAIN_PATH"]
       )

     # main app profile
     sigh(
       api_key: api_key,
       app_identifier: app_id,
       provisioning_name: profile_name,
       force: true
     )
    end

    desc "Build the iOS app for release"
    lane :build_release do |options|
     app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)

     profile_name = "App Provisioning Profile"
     output_name = "wordclock"
     export_method = "app-store"

     # turn off automatic signing during build so correct code signing identity is guaranteed to be used
     update_code_signing_settings(
       use_automatic_signing: false,
       targets: ["WordClock"],
       code_sign_identity: "Apple Distribution",
       bundle_identifier: app_identifier,
       profile_name: profile_name,
       build_configurations: ["Release"]
     )

    update_project_team(
      path: "WordClock.xcodeproj",
      teamid: ENV["TEAM_ID"]
    )

     # build the app
     gym(
       scheme: "WordClock",
       output_name: output_name,
       configuration: "Release",
       destination: "platform:iOS, name:Any iOS Device",
       export_options: {
         method: export_method,
         provisioningProfiles: {
           app_identifier => profile_name
         }
       }
     )
    end

    desc "Upload to TestFlight / ASC"
    lane :upload_release do
     api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

     deliver(
         api_key: api_key,
         skip_screenshots: true,
         skip_metadata: true,
         skip_app_version_update: true,
         force: true,
         run_precheck_before_submit: false
     )
    end

    desc "Build and upload to TestFlight"
    lane :build_upload_testflight do
      load_asc_api_key
      prepare_signing
      fetch_and_increment_build_number
      build_release
      upload_release
    end
  end
